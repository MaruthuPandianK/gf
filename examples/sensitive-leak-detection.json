{
  "name": "sensitive-leak-detection",
  "flags": "-Hni",
  "pattern": "(?i)(?:(?:\\b(Application-Trace|Routing[\\s-]Error|DEBUG\\s*[:=]\\s*True\\b|Caused\\s+by:|Microsoft\\s*\\.NET\\s*Framework\\b|WebApplicationException\\b|java\\.lang\\.[A-Za-z]+Exception|javax\\.servlet\\.[A-Za-z]+Exception|phpinfo\\(\\)|swagger-ui|SQLSTATE\\[\\w+\\]|at\\s+(org\\.|sun\\.|java\\.|com\\.)[A-Za-z0-9\\.]+\\(|System\\.StackTrace\\b|TypeError:\\s|ReferenceError:\\s|ValueError:\\s|SyntaxError:\\s|Segmentation\\s+Fault|OutOfMemoryError|500\\s+Internal\\s+Server\\s+Error\\b|403\\s+Forbidden\\b|404\\s+Not\\s+Found\\b|405\\s+Method\\s+Not\\s+Allowed\\b|GraphQL\\s+Error:|Laravel\\s+Exception|Flask\\s+Debug|Express\\s+Error|AWS\\s+Lambda\\s+Error|GCP\\s+Cloud\\s+Function\\s+Error|Azure\\s+Function\\s+Error|PHP\\s+(?:Warning|Error|Fatal\\s+Error|Parse\\s+Error|Notice|Deprecated|E_(?:ERROR|WARNING|NOTICE|DEPRECATED))|Uncaught\\s+Exception|include_path\\s*=|Undefined\\s+(?:Index|Variable|Offset)|\\?php\\b|<\\?\\s*(?!xml)|expects\\s+parameter\\s+\\d+|var_dump\\s*\\(|print_r\\s*\\(|error_log\\s*\\(|(?:in|at)\\s+[^\\n]+?on\\s+line\\s+\\d+)\\b)|(?:\\b([a-zA-Z0-9-_]{1,100}\\.firebaseio\\.com|firebaseio\\.com/[a-zA-Z0-9-_]{1,100}|\"databaseURL\"\\s*:\\s*\"https?://[a-zA-Z0-9-_]+\\.firebaseio\\.com\")\\b)|(?:\\b(django|laravel|symfony|graphite|grafana|X-Drupal-Cache|struts|codeigniter|cakephp|grails|elasticsearch|kibana|logstash|tomcat|jenkins|hudson|com\\.atlassian\\.jira|apache\\s+subversion|chef\\s+server|rabbitmq\\s+management|mongodb|travis\\s+ci\\s+-\\s+enterprise|bmc\\s+remedy|artifactory|flask|fastapi|next\\.js|graphql|swagger-ui|kubernetes|aws\\s+lambda|spring\\s+boot)(?![\\w-])\\b)|(?:\\b(func\\s+[A-Za-z0-9_]+\\s*\\(.*?\\)|func\\s+\\([A-Za-z0-9_\\s*]+\\)\\s*[A-Za-z0-9_]+\\s*\\(.*?\\)|http\\.HandleFunc\\b|func\\s+Test[A-Za-z0-9_]+\\s*\\(t\\s*\\*testing\\.T\\))\\b)|(?:\\b([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})(?![\\w-])\\b)|(?:\\b(Authorization:\\s*Basic\\s*[A-Za-z0-9+/]{20,}[A-Za-z0-9+/=]{0,2}|Authorization:\\s*Bearer\\s*eyJ[A-Za-z0-9_\\-\\.]{20,}|Authorization:\\s*Digest\\s*username=\"[A-Za-z0-9_\\-\\.]+\"|https?://[A-Za-z0-9_\\-\\.]+:[A-Za-z0-9_\\-\\.]+@[A-Za-z0-9\\-\\.]+|\"(?:apiKey|access_token|auth_token)\":\\s*\"[A-Za-z0-9_\\-\\.]{20,}\"|username=[A-Za-z0-9_\\-\\.]+&password=[A-Za-z0-9_\\-\\.]+)\\b)|(?:\\b((?:(?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}(?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(?:(?:/\\d{1,2})|\\b)|https?://(?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}(?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})\\b)|(?:\\b((?:api[_-]?key|aws[_-](?:access[_-]?key|secret[_-]?access[_-]?key)|s3[_-]?key|secret[_-]?key|passw(?:ord|d)?|auth[_-]?token|access[_-]?token|client[_-]?secret|token|key|credential)[a-z0-9_-]{0,20})\\s*[:=]\\s*(?:\"([^\"&]{20,})\"|([A-Za-z0-9+/\\-_\\.]{20,}(?:==)?)))|(?:^(?:<[a-z0-9_-]+:|[A-Za-z0-9_-]+:)|(?:\"[A-Za-z0-9_-]+\"\\s*:\\s*\"[^\"&]+\"))\\s*(?:.*?(?:api[_-]?key|aws_|secret|token|auth|password|version|server|x-powered-by|x-api-key|x-auth-token|debug|trace|credential)[^\\r\\n]*)|(?:\\b(CURLOPT_(?:HTTPHEADER|HEADER|COOKIE|RANGE|REFERER|USERAGENT|PROXYHEADER|USERPWD|POSTFIELDS|CUSTOMREQUEST|URL|PROXY|SSL_VERIFYPEER|SSL_VERIFYHOST|FTP_SSL|TIMEOUT|CONNECTTIMEOUT)[^\\r\\n]*?(?:=>|,)\\s*(?:\"[^\"&]+\"|[^\\r\\n;]+)?|curl_(?:setopt|exec|init|error|errno)\\s*\\([^\\)]*?(?:HTTPHEADER|USERPWD|POSTFIELDS|COOKIE|URL)[^\\)]*?\\)|\"CURLOPT_(?:HTTPHEADER|USERPWD|POSTFIELDS|COOKIE|URL|USERAGENT)\":\\s*\"[^\"&]+\"|\\$[a-zA-Z0-9_]+\\s*=\\s*(?:array\\s*\\([^\\)]*?(?:HTTPHEADER|USERPWD|POSTFIELDS|COOKIE|URL)[^\\)]*?\\)|curl_init\\s*\\())))",
  "blacklist": [
    "example\\.com",
    "sample\\.com",
    "test\\.com",
    "example\\.go",
    "sample\\.php",
    "test\\.php",
    "example\\.php",
    "tutorial\\.php",
    "example\\.firebaseio\\.com",
    "sample\\.firebaseio\\.com",
    "test\\.firebaseio\\.com",
    "demo\\.firebaseio\\.com",
    "firebaseio\\.com/docs",
    "firebaseio\\.com/pricing",
    "example\\.django",
    "sample\\.laravel",
    "test\\.jenkins",
    "demo\\.grafana",
    "docs\\.elastic\\.co",
    "swagger\\.io",
    "example\\.com.*(django|laravel|symfony)",
    "func\\s+.*\\.js",
    "function\\s+[a-z0-9_]+\\(",
    "docs\\.golang\\.org",
    "user:pass@example",
    "Authorization:\\s*Basic\\s*dXNlcjpwYXNz",
    "apiKey\":\\s*\"example\"",
    "password\":\\s*\"placeholder\"",
    "secret\":\\s*\"test\"",
    "docs\\.api\\.com",
    "docs\\.php\\.net",
    "0\\.0\\.0\\.0",
    "127\\.0\\.0\\.1",
    "8\\.8\\.8\\.8",
    "1\\.1\\.1\\.1",
    "192\\.168\\.0\\.1",
    "localhost",
    "::1",
    "<x-example-header",
    "x-powered-by\":\\s*\"example\"",
    "server\":\\s*\"nginx\"",
    "CURLOPT_.*example",
    "curl\\.haxx\\.se"
  ],
  "description": "Detects a wide range of sensitive data leaks including PHP errors, verbose errors, Firebase URLs, framework fingerprints, Go functions, email addresses, HTTP authentication credentials, IP addresses, sensitive credentials, custom headers, and PHP cURL options in HTTP responses, JavaScript, PHP code, or logs. Filters common false positives like documentation, example domains, and test data.",
  "severity": "critical",
  "authors": ["maruthu", "Grok3"],
  "recommendations": [
    "Disable debug modes in production (e.g., PHP display_errors=Off, Django DEBUG=False).",
    "Use custom error handlers to suppress PHP stack traces and debug info.",
    "Avoid exposing PHP source code (e.g., <?php) in public responses.",
    "Restrict access to Firebase databases and API documentation (e.g., Swagger, GraphQL).",
    "Suppress framework and server fingerprints (e.g., Server, X-Powered-By) in HTTP responses.",
    "Avoid exposing source code (e.g., Go, PHP) or sensitive configurations in public endpoints.",
    "Use environment variables or secret management (e.g., AWS Secrets Manager, HashiCorp Vault) for credentials and API keys.",
    "Implement secure authentication mechanisms (e.g., OAuth 2.0) and avoid hardcoding credentials.",
    "Mask internal IP addresses and restrict access to administrative interfaces (e.g., Jenkins, Grafana).",
    "Audit client-side code (e.g., JavaScript) and API responses for hardcoded sensitive data.",
    "Use a WAF to filter sensitive headers and monitor logs for accidental leaks.",
    "Rotate compromised credentials immediately and report findings responsibly."
  ],
  "reference": [
    "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
    "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/",
    "https://cheatsheetseries.owasp.org/cheatsheets/Information_Disclosure_Cheat_Sheet.html",
    "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html",
    "https://firebase.google.com/docs/database/security",
    "https://www.php.net/manual/en/function.curl-setopt.php",
    "https://www.php.net/manual/en/errorfunc.configuration.php",
    "https://book.hacktricks.xyz/pentesting-web/information-disclosure"
  ],
  "grep": true
}
